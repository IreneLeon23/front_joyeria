{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import React,{memo,useCallback,useMemo}from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import{RTL_DIRECTION,RTL_STYLE}from'../constants';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function RenderBadge({rtl,label,props,value,textStyle,badgeStyle,badgeTextStyle,badgeDotStyle,getBadgeColor,getBadgeDotColor,showBadgeDot,onPress,THEME}){const __onPress=useCallback(()=>onPress(value),[onPress,value]);const _badgeStyle=useMemo(()=>[RTL_DIRECTION(rtl,THEME.badgeStyle),...[badgeStyle].flat(),{backgroundColor:getBadgeColor(value)}],[THEME,rtl,badgeStyle,getBadgeColor]);const _badgeDotStyle=useMemo(()=>[RTL_STYLE(rtl,THEME.badgeDotStyle),...[badgeDotStyle].flat(),{backgroundColor:getBadgeDotColor(value)}],[THEME,rtl,badgeDotStyle,getBadgeDotColor]);const _badgeTextStyle=useMemo(()=>[...[textStyle].flat(),...[badgeTextStyle].flat()],[textStyle,badgeTextStyle]);return _jsxs(TouchableOpacity,_objectSpread(_objectSpread({style:_badgeStyle},props),{},{onPress:__onPress,children:[showBadgeDot&&_jsx(View,{style:_badgeDotStyle}),_jsx(Text,{style:_badgeTextStyle,children:label})]}));}const areEqual=(nextProps,prevProps)=>{if(nextProps.label!==prevProps.label)return false;if(nextProps.value!==prevProps.value)return false;if(nextProps.showBadgeDot!==prevProps.showBadgeDot)return false;if(nextProps.rtl!==prevProps.rtl)return false;if(nextProps.theme!==prevProps.theme)return false;return true;};export default memo(RenderBadge,areEqual);","map":{"version":3,"names":["React","memo","useCallback","useMemo","View","Text","TouchableOpacity","RTL_DIRECTION","RTL_STYLE","jsx","_jsx","jsxs","_jsxs","RenderBadge","rtl","label","props","value","textStyle","badgeStyle","badgeTextStyle","badgeDotStyle","getBadgeColor","getBadgeDotColor","showBadgeDot","onPress","THEME","__onPress","_badgeStyle","flat","backgroundColor","_badgeDotStyle","_badgeTextStyle","_objectSpread","style","children","areEqual","nextProps","prevProps","theme"],"sources":["C:/prestamos/prestamos-front/node_modules/react-native-dropdown-picker/src/components/RenderBadgeItem.js"],"sourcesContent":["import React, {\n    memo, useCallback, useMemo\n} from 'react';\n\nimport {\n    View,\n    Text,\n    TouchableOpacity\n} from 'react-native';\n\nimport { RTL_DIRECTION, RTL_STYLE } from '../constants';\n\nfunction RenderBadge({\n    rtl,\n    label,\n    props,\n    value,\n    textStyle,\n    badgeStyle,\n    badgeTextStyle,\n    badgeDotStyle,\n    getBadgeColor,\n    getBadgeDotColor,\n    showBadgeDot,\n    onPress,\n    THEME\n}) {\n    /**\n     * onPress.\n     */\n    const __onPress = useCallback(() => onPress(value), [onPress, value]);\n\n    /**\n     * The badge style.\n     * @returns {object}\n     */\n    const _badgeStyle = useMemo(() => ([\n        RTL_DIRECTION(rtl, THEME.badgeStyle),\n        ...[badgeStyle].flat(), {\n            backgroundColor: getBadgeColor(value)\n        }\n    ]), [THEME, rtl, badgeStyle, getBadgeColor]);\n\n    /**\n     * The badge dot style.\n     * @return {object}\n     */\n    const _badgeDotStyle = useMemo(() => ([\n        RTL_STYLE(rtl, THEME.badgeDotStyle),\n        ...[badgeDotStyle].flat(), {\n            backgroundColor: getBadgeDotColor(value)\n        }\n    ]), [THEME, rtl, badgeDotStyle, getBadgeDotColor]);\n\n    /**\n     * The badge text style.\n     * @returns {object}\n     */\n    const _badgeTextStyle = useMemo(() => ([\n        ...[textStyle].flat(),\n        ...[badgeTextStyle].flat()\n    ]), [textStyle, badgeTextStyle]);\n\n    return (\n        <TouchableOpacity style={_badgeStyle} {...props} onPress={__onPress}>\n            {showBadgeDot && <View style={_badgeDotStyle} />}\n            <Text style={_badgeTextStyle}>{label}</Text>\n        </TouchableOpacity>\n    );\n}\n\nconst areEqual = (nextProps, prevProps) => {\n    if (nextProps.label !== prevProps.label)\n        return false;\n    if (nextProps.value !== prevProps.value)\n        return false;\n    if (nextProps.showBadgeDot !== prevProps.showBadgeDot)\n        return false;\n    if (nextProps.rtl !== prevProps.rtl)\n        return false;\n    if (nextProps.theme !== prevProps.theme)\n        return false;\n\n    return true;\n}\n\nexport default memo(RenderBadge, areEqual);"],"mappings":"+qBAAA,MAAO,CAAAA,KAAK,EACRC,IAAI,CAAEC,WAAW,CAAEC,OAAO,KACvB,OAAO,CAAC,OAAAC,IAAA,iDAAAC,IAAA,iDAAAC,gBAAA,sDAQf,OAASC,aAAa,CAAEC,SAAS,KAAQ,cAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExD,QAAS,CAAAC,WAAWA,CAAC,CACjBC,GAAG,CACHC,KAAK,CACLC,KAAK,CACLC,KAAK,CACLC,SAAS,CACTC,UAAU,CACVC,cAAc,CACdC,aAAa,CACbC,aAAa,CACbC,gBAAgB,CAChBC,YAAY,CACZC,OAAO,CACPC,KACJ,CAAC,CAAE,CAIC,KAAM,CAAAC,SAAS,CAAGzB,WAAW,CAAC,IAAMuB,OAAO,CAACR,KAAK,CAAC,CAAE,CAACQ,OAAO,CAAER,KAAK,CAAC,CAAC,CAMrE,KAAM,CAAAW,WAAW,CAAGzB,OAAO,CAAC,IAAO,CAC/BI,aAAa,CAACO,GAAG,CAAEY,KAAK,CAACP,UAAU,CAAC,CACpC,GAAG,CAACA,UAAU,CAAC,CAACU,IAAI,CAAC,CAAC,CAAE,CACpBC,eAAe,CAAER,aAAa,CAACL,KAAK,CACxC,CAAC,CACH,CAAE,CAACS,KAAK,CAAEZ,GAAG,CAAEK,UAAU,CAAEG,aAAa,CAAC,CAAC,CAM5C,KAAM,CAAAS,cAAc,CAAG5B,OAAO,CAAC,IAAO,CAClCK,SAAS,CAACM,GAAG,CAAEY,KAAK,CAACL,aAAa,CAAC,CACnC,GAAG,CAACA,aAAa,CAAC,CAACQ,IAAI,CAAC,CAAC,CAAE,CACvBC,eAAe,CAAEP,gBAAgB,CAACN,KAAK,CAC3C,CAAC,CACH,CAAE,CAACS,KAAK,CAAEZ,GAAG,CAAEO,aAAa,CAAEE,gBAAgB,CAAC,CAAC,CAMlD,KAAM,CAAAS,eAAe,CAAG7B,OAAO,CAAC,IAAO,CACnC,GAAG,CAACe,SAAS,CAAC,CAACW,IAAI,CAAC,CAAC,CACrB,GAAG,CAACT,cAAc,CAAC,CAACS,IAAI,CAAC,CAAC,CAC5B,CAAE,CAACX,SAAS,CAAEE,cAAc,CAAC,CAAC,CAEhC,MACI,CAAAR,KAAA,CAACN,gBAAgB,CAAA2B,aAAA,CAAAA,aAAA,EAACC,KAAK,CAAEN,WAAY,EAAKZ,KAAK,MAAES,OAAO,CAAEE,SAAU,CAAAQ,QAAA,EAC/DX,YAAY,EAAId,IAAA,CAACN,IAAI,EAAC8B,KAAK,CAAEH,cAAe,CAAE,CAAC,CAChDrB,IAAA,CAACL,IAAI,EAAC6B,KAAK,CAAEF,eAAgB,CAAAG,QAAA,CAAEpB,KAAK,CAAO,CAAC,GAC9B,CAAC,CAE3B,CAEA,KAAM,CAAAqB,QAAQ,CAAGA,CAACC,SAAS,CAAEC,SAAS,GAAK,CACvC,GAAID,SAAS,CAACtB,KAAK,GAAKuB,SAAS,CAACvB,KAAK,CACnC,MAAO,MAAK,CAChB,GAAIsB,SAAS,CAACpB,KAAK,GAAKqB,SAAS,CAACrB,KAAK,CACnC,MAAO,MAAK,CAChB,GAAIoB,SAAS,CAACb,YAAY,GAAKc,SAAS,CAACd,YAAY,CACjD,MAAO,MAAK,CAChB,GAAIa,SAAS,CAACvB,GAAG,GAAKwB,SAAS,CAACxB,GAAG,CAC/B,MAAO,MAAK,CAChB,GAAIuB,SAAS,CAACE,KAAK,GAAKD,SAAS,CAACC,KAAK,CACnC,MAAO,MAAK,CAEhB,MAAO,KAAI,CACf,CAAC,CAED,cAAe,CAAAtC,IAAI,CAACY,WAAW,CAAEuB,QAAQ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}